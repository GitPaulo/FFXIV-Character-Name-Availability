require('dotenv').config();

const DEFAULT_MAX_RETRIES = 3;
const DEFAULT_INITIAL_DELAY = 500; // in milliseconds
const DEFAULT_P_LIMIT_CONCURRENCY = 16;
const DEFAULT_BACKOFF_CAP = 16000; // in milliseconds
const DEFAULT_AVAILABILITY_CACHE_TTL = 3600; // in seconds
const DEFAULT_AVAILABILITY_CACHE_CHECK_PERIOD = 600; // in seconds
const DEFAULT_REGION_CACHE_TTL = 21600; // in seconds
const DEFAULT_REGION_CACHE_CHECK_PERIOD = 1200; // in seconds

const config = {
  MAX_RETRIES: parseInt(process.env.FCA_SCRAPE_MAX_RETRIES, 10) || DEFAULT_MAX_RETRIES,
  INITIAL_DELAY: parseInt(process.env.FCA_SCRAPE_INITIAL_DELAY_MS, 10) || DEFAULT_INITIAL_DELAY,
  P_LIMIT_CONCURRENCY: parseInt(process.env.FCA_P_LIMIT_CONCURRENCY, 10) || DEFAULT_P_LIMIT_CONCURRENCY,
  BACKOFF_CAP: parseInt(process.env.FCA_SCRAPE_BACKOFF_CAP_MS, 10) || DEFAULT_BACKOFF_CAP,
  CACHES: {
    AVAILABILITY: {
      TTL: parseInt(process.env.FCA_AVAILABILITY_CACHE_TTL_SEC, 10) || DEFAULT_AVAILABILITY_CACHE_TTL,
      CHECK_PERIOD: parseInt(process.env.FCA_AVAILABILITY_CACHE_CHECK_PERIOD_SEC, 10) || DEFAULT_AVAILABILITY_CACHE_CHECK_PERIOD,
    },
    REGION: {
      TTL: parseInt(process.env.FCA_REGION_CACHE_TTL_SEC, 10) || DEFAULT_REGION_CACHE_TTL,
      CHECK_PERIOD: parseInt(process.env.FCA_REGION_CACHE_CHECK_PERIOD_SEC, 10) || DEFAULT_REGION_CACHE_CHECK_PERIOD,
    },
  },
};

module.exports = config;
